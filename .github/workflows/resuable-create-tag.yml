name: "Reusable • Create Prerelease Tag"

on:
  workflow_call:

jobs:
  create_version_tag:
    name: Calculate & Tag Version
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.gitversion.outputs.semVer }}
      fullsemver: ${{ steps.gitversion.outputs.fullSemVer }}
      major: ${{ steps.gitversion.outputs.major }}
      minor: ${{ steps.gitversion.outputs.minor }}
      patch: ${{ steps.gitversion.outputs.patch }}
      informational: ${{ steps.gitversion.outputs.informationalVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: '6.0.*'

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3
        with:
          useConfigFile: true 
        continue-on-error: true          
        
      - name: GitVersion /diag
        if: ${{ steps.gitversion.outcome == 'failure' }}
        run: |
          echo "Running GitVersion /diag…"
          dotnet-gitversion /diag /config GitVersion.yml || true
      
      - name: Fail job after diag
        if: ${{ steps.gitversion.outcome == 'failure' }}
        run: exit 1
  
      - name: Show calculated version
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "Informational: ${{ steps.gitversion.outputs.informationalVersion }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "Commit Date: ${{ steps.gitversion.outputs.commitDate }}"

      - name: Create and push tag (if not exists)
        id: create_tag
        env:
          SEMVER: ${{ steps.gitversion.outputs.semVer }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TAG="v${SEMVER}"

          if git rev-parse -q --verify "refs/tags/${TAG}" >/dev/null; then
            echo "Tag ${TAG} existiert bereits – kein neuer Tag wird erstellt."
            echo "created=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Erstelle neuen Tag ${TAG}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "${TAG}" -m "Release ${TAG}"
          git push origin "${TAG}"
          echo "created=true" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        if: steps.create_tag.outputs.created == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: v${{ steps.gitversion.outputs.semVer }}
          body: |
            Automated release via GitVersion.
            Version: ${{ steps.gitversion.outputs.fullSemVer }}
            Informational: ${{ steps.gitversion.outputs.informationalVersion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
